#version 460
#extension GL_GOOGLE_include_directive : require

#include "../Light.h"
#include "LightParams.h"

struct TerrainInfo {
  ivec2 extent;
  float heightOffset;
  float heightAmplifier;
};


layout(local_size_x = 128) in;

layout(set = 0, binding = 0, r32f) uniform image2D heightMaps[32];
layout(set = 0, binding = 1) buffer infos_t
{
  TerrainInfo infos[];
};

layout(set = 1, binding = 0) readonly uniform params_t
{
  LightParams params;
};

layout(set = 1, binding = 1) buffer lights
{
  Light lightsBuffer[];
};

// layout(binding = 2, r32f) readonly uniform image2D terrainMap;

layout(push_constant) uniform push_constant_t
{
  uint texturesAmount;
};

void main()
{
  uint index = uint(gl_GlobalInvocationID.x);
  if (index >= params.lightsAmount)
  {
    return;
  }

  Light currentLight = lightsBuffer[index];

  ivec2 lightPosOnTerrainMap = ivec2(currentLight.pos.xz);

  float height = 0;

  for (uint i = 0; i < texturesAmount; i++)
  {
    height += mix(height, (imageLoad(heightMaps[i], lightPosOnTerrainMap / infos[i].extent).x - infos[i].heightOffset) * infos[i].heightAmplifier, 0.5);
  }

  currentLight.worldPos = vec4(currentLight.pos, 1);
  currentLight.worldPos.y += height;

  lightsBuffer[index] = currentLight;
}
